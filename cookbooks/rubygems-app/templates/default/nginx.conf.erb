server {
  listen <%= @nginx_port %>;
  server_name <%= node['fqdn'] %>;

  # Set the max size for file uploads to 500Mb
  client_max_body_size 500M;

  access_log /var/log/nginx/access.log combined;
  error_log /var/log/nginx/error.log info;

  # allow only valid crud methods
  if ($request_method !~ GET|POST|PUT|DELETE|HEAD) {
    return 405;
  }

  # ignore obviously false requests
  if ($request_filename ~ \.(php.?|[ajk]sp[ax]?|[a-z]?html?|x|idc|log|cf[mc]?|mdb|do|(ms|f)?cgi|p(er)?lx?|nsf|dll|fts|exe|bat|dot|ini|com|pif|sh|sql|git|svn|yml)$) {
    return 404;
  }

  # opt-in to the future
  add_header "X-UA-Compatible" "IE=Edge,chrome=1";

  # doc root
  root <%= @rails_root %>/current/public;

  # redirect not found error to the static page /404.html
  error_page 404 @400_errors;
  location @400_errors {
    root <%= @rails_root %>/current/public;
    try_files 404.html /404.html = 404;
  }

  # redirect server error pages to the static page /50x.html
  error_page 500 502 503 504 @500_errors;
  location @500_errors {
    root <%= @rails_root %>/current/public;
    try_files 500.html /500.html = 500;
  }

  try_files $uri $uri/index.html $uri.html @unicorn;

  location @unicorn {
    proxy_set_header Host $host;
    proxy_redirect off;
    proxy_pass http://localhost:<%= @unicorn_port %>;
  }

  # Expires headers on static assets
  location ~ ^/(assets|images|javascripts|stylesheets|system)/ {
    expires max;
    add_header "Cache-Control" "public";
    # access_log off;
    break;
  }

  # Set expires max on static file types (make sure you are using cache busting filenames or query params):
  location ~* ^.+\.(css|js|jpg|jpeg|gif|png|ico|gz|svg|svgz|ttf|otf|woff|eot|mp4|ogg|ogv|webm)$ {
    expires max;
    add_header "Cache-Control" "public";
    # access_log off;
    break;
  }
}

